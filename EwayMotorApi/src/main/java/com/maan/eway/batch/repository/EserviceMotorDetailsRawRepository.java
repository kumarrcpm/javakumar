/*
 * Java domain class for entity "EserviceMotorDetailsRaw" 
 * Created on 2023-05-11 ( Date ISO 2023-05-11 - Time 16:43:49 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
 
 /*
 * Created on 2023-05-11 ( 16:43:49 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */


package com.maan.eway.batch.repository;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.maan.eway.batch.entity.EserviceMotorDetailsRaw;
import com.maan.eway.batch.entity.EserviceMotorDetailsRawId;
/**
 * <h2>EserviceMotorDetailsRawRepository</h2>
 *
 * createdAt : 2023-05-11 - Time 16:43:49
 * <p>
 * Description: "EserviceMotorDetailsRaw" Repository
 */
 
 
 
/**
 * @author MAANSAROVAR04
 *
 */
@Repository
public interface EserviceMotorDetailsRawRepository  extends JpaRepository<EserviceMotorDetailsRaw,EserviceMotorDetailsRawId > , JpaSpecificationExecutor<EserviceMotorDetailsRaw> {

	List<EserviceMotorDetailsRaw> findByRequestReferenceNo(String requestReferenceNo);
	
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw raw SET INSURANCE_TYPE_ID =( SELECT SECTION_ID FROM Product_Section_Master WHERE raw.product_id=product_id AND raw.company_id = company_id AND STATUS='Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND TRIM(UPPER(raw.insurance_type_desc))=TRIM(UPPER(section_name)) AND amend_id = ( SELECT MAX(amend_id) FROM Product_Section_Master WHERE raw.product_id=product_id AND raw.company_id = company_id AND STATUS='Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND TRIM(UPPER(raw.insurance_type_desc))=TRIM(UPPER(section_name)))) WHERE raw.company_id=?1 AND raw.product_id=?2 AND raw.typeid=?3 AND raw.request_reference_no =?4 AND raw.status='Y'",nativeQuery=true)
	Integer updateInsuranceTypeId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE Eservice_Motor_Details_Raw RA INNER JOIN Eservice_Motor_Details_Raw RS ON RA.company_Id = RS.company_Id AND RA.product_Id = RS.product_Id AND RA.typeid = RS.typeid AND RA.request_Reference_No = RS.request_Reference_No AND RA.VEHICLE_ID=RS.VEHICLE_ID SET RA.section_Id = RS.insurance_Type_Id WHERE RA.company_Id =?1 AND RA.product_Id =?2 AND RA.typeid =?3 AND RA.request_Reference_No =?4 AND ra.status='Y'",nativeQuery=true)
	Integer updateSectionIdByRequestRefNo(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw raw SET body_type_id =( SELECT body_id FROM Eway_Motor_Bodytype_Master WHERE TRIM( UPPER(BODY_NAME_EN))= TRIM( UPPER(raw.body_type_desc) ) AND STATUS = 'Y' AND (BRANCH_CODE=RAW.BRANCH_CODE OR BRANCH_CODE='99999' ) AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = raw.company_id AND amend_id =( SELECT MAX(amend_id) FROM Eway_Motor_Bodytype_Master WHERE TRIM(UPPER(BODY_NAME_EN))= TRIM(UPPER(raw.body_type_desc)) AND STATUS = 'Y' AND (BRANCH_CODE=RAW.BRANCH_CODE OR BRANCH_CODE='99999') AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = raw.company_id ) LIMIT 1 ) WHERE raw.company_id =?1 AND raw.product_id =?2 AND raw.typeid =?3 AND raw.request_reference_no =?4 AND raw.status='Y'",nativeQuery=true)
	Integer updateBodyTypeId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw raw SET motor_usage_id =( SELECT vehicle_usage_id FROM Motor_VehicleUsage_master WHERE TRIM(UPPER(VEHICLE_USAGE_DESC))=TRIM(UPPER(raw.MOTOR_USAGE_DESC)) AND( section_id = raw.section_id OR section_id = '99999')  AND (BRANCH_CODE=RAW.BRANCH_CODE OR BRANCH_CODE='99999')  AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = raw.company_id AND amend_id = ( SELECT MAX(amend_id) FROM Motor_VehicleUsage_master WHERE TRIM(UPPER(VEHICLE_USAGE_DESC))=TRIM(UPPER(raw.MOTOR_USAGE_DESC)) AND ( section_id = raw.section_id OR section_id = '99999' )  AND (BRANCH_CODE=RAW.BRANCH_CODE OR BRANCH_CODE='99999')  AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id =?1 ) LIMIT 1 ) WHERE raw.company_id =?1 AND raw.product_id =?2 AND raw.typeid =?3 AND raw.request_reference_no =?4 AND raw.status='Y'",nativeQuery=true)
	Integer updateMotorUsageId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	@Query(value="UPDATE eservice_motor_details_raw raw SET INSURANCE_CLASS_ID =( SELECT policy_type_id FROM Policy_Type_Master WHERE TRIM( UPPER(policy_type_name))= TRIM( UPPER(raw.insurance_class_desc) ) AND product_id = raw.product_id AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = raw.company_id AND AMEND_ID =( SELECT MAX(amend_id) FROM Policy_Type_Master WHERE UPPER(policy_type_name)= UPPER(raw.insurance_class_desc) AND product_id = raw.product_id AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end ) ) WHERE raw.company_id =?1 AND raw.product_id =?2 AND raw.typeid =?3 AND raw.request_reference_no =?4 AND raw.status='Y'",nativeQuery=true)
	Integer updateInsuranceClassId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw SET error_desc=CONCAT(error_desc,\"\", CASE WHEN(TRIM(UPPER(INSURANCE_TYPE_DESC))=TRIM(UPPER('Comprehensive')) OR TRIM(UPPER(INSURANCE_TYPE_DESC))=TRIM(UPPER('TPFT'))) AND (VEHICLE_SUMINSURED='' OR VEHICLE_SUMINSURED IS NULL OR ACCESSORIES_SUMINSURED='' OR ACCESSORIES_SUMINSURED IS NULL OR WINDSHIELD_SUMINSURED='' OR WINDSHIELD_SUMINSURED IS NULL OR EXTENDED_SUMINSURED='' OR EXTENDED_SUMINSURED IS NULL) THEN '~vehicle or winshield or accessories or tppd suminsured is mandatory for comprehensive or TPFT insurance' ELSE '' END), STATUS=CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id=?1 AND product_id=?2 AND typeid=?3 AND request_reference_no =?4 AND status='Y'",nativeQuery=true)
	Integer updateSuminsuredValidationByPolicyType(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw SET error_desc =CONCAT(error_desc,\"\",CASE WHEN TRIM(UPPER(COLLATERAL))=TRIM(UPPER('YES')) AND(BORROWER_TYPE IS NULL OR BORROWER_TYPE='' OR FIRST_LOSS_PAYEE IS NULL OR FIRST_LOSS_PAYEE ='') THEN '~Borrower Type and First loss peyee is mandatory if you selected collateral is YES' ELSE '' END), STATUS =CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id =?1 AND product_id =?2 AND typeid =?3 AND request_reference_no =?4 AND status='Y'",nativeQuery=true)
	Integer updateCollateralValidation(Integer companyId,Integer productId,Integer typeId,String requestRefNo );


	List<EserviceMotorDetailsRaw> findByCompanyIdAndProductIdAndRequestReferenceNoAndStatusIgnoreCase(Integer companyId,
			Integer productId, String requestRefNo, String status);


	List<EserviceMotorDetailsRaw> findByCompanyIdAndProductIdAndRequestReferenceNo(Integer companyId, Integer productId,
			String requestRefNo);


	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw SET error_desc = CASE WHEN(SECTION_ID IS NULL OR SECTION_ID = '') THEN '~Sectionid not found' WHEN INSURANCE_TYPE_ID IS NULL OR INSURANCE_TYPE_ID = '' THEN '~InsuranceType id not found' WHEN INSURANCE_CLASS_ID IS NULL OR INSURANCE_CLASS_ID = '' THEN '~InsuranceClass id not found' WHEN BODY_TYPE_ID IS NULL OR BODY_TYPE_ID = '' THEN '~BodyType id not found' WHEN MOTOR_USAGE_ID IS NULL OR MOTOR_USAGE_ID = '' THEN '~MotorUsageId not found' ELSE '' END, STATUS = CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id =?1 AND product_id = ?2 AND typeid =?3 AND request_reference_no =?4 AND status='Y'",nativeQuery=true)
	Integer updateMasterIdEmptyValidation(Integer companyId, Integer productId, Integer typeId, String requestReferenceNo);

	@Modifying
	@Transactional
	@Query(value="UPDATE eservice_motor_details_raw RAW SET STATUS='E', ERROR_DESC=CONCAT(ERROR_DESC,'~DUPLICATE SEARCH BY DATA IS FOUND') WHERE SEARCH_BY_DATA IN(SELECT SEARCH_BY_DATA FROM (SELECT SEARCH_BY_DATA FROM eservice_motor_details_raw WHERE company_id =?1 AND product_id =?2 AND typeid =?3 AND request_reference_no =?4 AND STATUS='Y' GROUP BY SEARCH_BY_DATA HAVING COUNT(*)>1)X) AND raw.company_id =?1 AND raw.product_id =?2 AND raw.typeid =?3 AND raw.request_reference_no =?4 AND raw.status='Y'",nativeQuery=true)
	Integer updateDupicateSearchBydata(Integer companyId,Integer productId,Integer typeId,String refNo);


	Integer deleteByRowNum(Integer rownum);



	
}
