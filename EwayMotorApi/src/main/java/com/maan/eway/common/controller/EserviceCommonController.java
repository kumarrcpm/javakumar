/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-11-18 ( Date ISO 2022-11-18 - Time 11:38:42 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.common.controller;

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.req.EserviceCommonGetAllByRefNo;
import com.maan.eway.common.req.EserviceCommonGetByRiskIdReq;
import com.maan.eway.common.req.EserviceCommonSaveReq;
import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.EserviceCommonGetRes;
import com.maan.eway.common.res.EserviceCommonSaveRes;
import com.maan.eway.common.res.EservicePaccGetRes;
import com.maan.eway.common.service.EserviceCommonService;
import com.maan.eway.error.Error;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>EserviceBuildingDetailsController</h2>
*/
@RestController
@RequestMapping("/api")
@Api(tags = "ESERVICE PERSONAL ACCIDENT ", description = "API's")
public class EserviceCommonController {

	@Autowired
	private  EserviceCommonService entityService;


	@Autowired
	private PrintReqService reqPrinter;
/*
	private static final String ENTITY_TITLE = "EserviceBuildingDetails";


 	public EserviceBuildingDetailsController (EserviceBuildingDetailsService entityService) {
		this.entityService = entityService;
	}
*/

	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER')")
	@PostMapping(value = "/saveeservicedetails")
	@ApiOperation(value = "This method is Insert Eservice Details")
	public ResponseEntity<CommonRes> savePersonalAccidentDetails(@RequestBody  EserviceCommonSaveReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<Error> validation = entityService.validateEserviceCommonDetails(req);
		//// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {
			/////// save
			List<EserviceCommonSaveRes> res = entityService.saveEserviceCommonDetails(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}
    }
	
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER')")
	@PostMapping("/geteservicebyriskid")
	@ApiOperation(value = "This method is Get Eservice Details")
	public ResponseEntity<CommonRes> getPersonalAccidentDetailsByRiskId(@RequestBody  EserviceCommonGetByRiskIdReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		EserviceCommonGetRes res = entityService.getEserviceCommonDetailsByRiskId(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER')")
	@PostMapping("/getalleservicebyrefno")
	@ApiOperation(value = "This method is Get All Eservice Details")
	public ResponseEntity<CommonRes> getPersonalAccList(@RequestBody  EserviceCommonGetAllByRefNo req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<EserviceCommonGetRes> res = entityService.getAllEserviceCommonDetailsByRefNo(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

}
