/* 
*  Copyright (c) 2019. All right reserved
 * Created on 2022-11-21 ( Date ISO 2022-11-21 - Time 15:19:57 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */

/*
 * Created on 2022-11-21 ( 15:19:57 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */


package com.maan.eway.bean;


import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import javax.persistence.Table;

import lombok.*;
import javax.persistence.*;
import java.io.Serializable;
import java.util.List;

import java.util.Date;
import javax.persistence.*;




/**
* Domain class for entity "CoverDocumentUploadDetails"
*
* @author Telosys Tools Generator
*
*/
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
@Entity
@DynamicInsert
@DynamicUpdate
@Builder
@IdClass(CoverDocumentUploadDetailsId.class)
@Table(name="cover_document_upload_details")


public class CoverDocumentUploadDetails implements Serializable {
 
private static final long serialVersionUID = 1L;
 
    //--- ENTITY PRIMARY KEY 
	@Id
	@Column(name="QUOTE_NO", nullable=false, length=100)
	private String     quoteNo ;

	@Id
	@Column(name="ID", nullable=false, length=100)
	private Integer id ;

    @Id
    @Column(name="REQUEST_REFERENCE_NO", nullable=false, length=100)
    private String     requestReferenceNo ;

    @Id
    @Column(name="DOCUMENT_ID", nullable=false)
    private Integer    documentId ;

    @Id
    @Column(name="PRODUCT_ID", nullable=false)
    private Integer    productId ;

    @Id
    @Column(name="COMPANY_ID", nullable=false, length=100)
    private String     companyId ;

    @Id
    @Column(name="SECTION_ID", nullable=false)
    private Integer    sectionId ;

    @Id
    @Column(name="COVER_ID", nullable=false, length=20)
    private String     coverId ;

    @Id
    @Column(name="DOCUMENT_REFERENCE_NO", nullable=false)
    private Integer    documentReferenceNo ;

    @Column(name="DOCUMENT_TYPE", nullable=false, length=100)
    private String     documentType;
    
    @Column(name="DOCUMENT_TYPE_DESC", nullable=false, length=100)
    private String     documentTypeDesc;
    
    @Column(name="DOCUMENT_DESC", nullable=false, length=100)
    private String     documentDesc;

    @Column(name="DOC_APPLICABLE", nullable=false, length=100)
    private String     docApplicable ;

    @Column(name="DOC_APPLICABLE_ID", nullable=false, length=100)
    private String     docApplicableId ;

    //--- ENTITY DATA FIELDS 
    @Temporal(TemporalType.DATE)
    @Column(name="UPLOADED_TIME")
    private Date       uploadedTime ;

    @Column(name="FILE_PATH_ORGINAL", length=100)
    private String     filePathOrginal ;

    @Column(name="FILE_PATH_BACKUP", length=100)
    private String     filePathBackup ;

    @Column(name="FILE_NAME", length=100)
    private String     fileName ;

    @Column(name="ORGINAL_FILE_NAME", length=100)
    private String     orginalFileName ;

    @Column(name="CREATED_BY", length=100)
    private String     createdBy ;

    @Column(name="STATUS", length=10)
    private String     status ;

    @Temporal(TemporalType.DATE)
    @Column(name="ENTRY_DATE")
    private Date       entryDate ;

    @Column(name="REQUESTED_BY", length=100)
    private String     requestedBy ;

    @Column(name="UPLOADED_BY", length=100)
    private String     uploadedBy ;


    //--- ENTITY LINKS ( RELATIONSHIP )


}



